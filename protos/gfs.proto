syntax = "proto3";

package gfs;

service Master {
    rpc HeartBeat(HBPayload) returns (Status){}
    rpc ChunkReport(CRPayload) returns (Status){}
    rpc Open(OpenPayload) returns (FileHandle){}
    rpc Remove(FileHandle) returns (Status){}
    rpc RequestChunk(FileHandle) returns (RCResp){}
    rpc ExtendLease(ELPayload) returns (Lease){}
}

service CServer {
    rpc SendChunk(Chunk) returns (Status){}
    rpc GetChunk(ChunkID) returns (Chunk){}
    rpc NewChunk(ChunkID) returns (Status){}
    rpc RemoveChunk(ChunkID) returns (Status){}
    rpc SetLease(Lease) returns (Status){}
    rpc RevokeLease(ChunkID) returns (Status){}
}

message FileHandle {
    string FileName = 1;
    uint64 Ptr = 2;
}

message Chunk {
    ChunkID Chunk = 1;
    bytes  Data = 2;
}

message ChunkID {
  uint64 ID = 1;
  string Checksum = 2;
}

message Status {
    bool Status = 1;
}

message ChunkServer {
    string ID = 1;
    bool Primary = 2;
}

message HBPayload {
    string ID = 1;
    int32 NumChunks = 2;
}

message CRPayload {
  string ID = 1;
  repeated uint64 Chunks = 2;
}

message OpenPayload {
    string ID = 1;
    string FileName = 2;
    uint32 Mode = 3;
}

message RCResp {
    uint64 ChunkID = 1;
    repeated ChunkServer Loc = 3;
}

message ELPayload {
  string ID = 1;
  uint64 ChunkID = 2;
}

message Lease {
  uint64 ChunkID = 1;
  uint64 Timestamp = 2;
}
